name: "Build Signed Debian Installer"

on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.103

    - name: Install dependencies
      run: dotnet restore --force

    - name: Build Linux Payloads
      run: dotnet build -c Release src/linux/Packaging.Linux/Packaging.Linux.csproj

    - name: Upload Installers
      uses: actions/upload-artifact@v2
      with:
        name: LinuxInstallers
        path: |
          out/linux/Packaging.Linux/deb/Release/*.deb
          out/linux/Packaging.Linux/tar/Release/*.tar.gz

  sign:
    name: 'Sign'
    runs-on: windows-latest
    needs: build
    steps:
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/checkout@v2

    - name: 'Download Installer Artifact'
      uses: actions/download-artifact@v2
      with:
        name: LinuxInstallers

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Install ESRP Client'
      shell: pwsh
      env:
        AZ_SUB: ${{ secrets.AZURE_SUBSCRIPTION }}
      run: |
        az storage blob download --subscription  "$env:AZ_SUB" --account-name gitcitoolstore -c tools -n microsoft.esrpclient.1.2.47.nupkg -f esrp.zip
        Expand-Archive -Path esrp.zip -DestinationPath .\esrp

    - name: Install Certs
      shell: pwsh
      env:
        AZ_SUB: ${{ secrets.AZURE_SUBSCRIPTION }}
        AZ_VAULT: ${{ secrets.AZURE_VAULT }}
        SSL_CERT: ${{ secrets.VAULT_SSL_CERT_NAME }}
        ESRP_CERT: ${{ secrets.VAULT_ESRP_CERT_NAME }}
      run: |
        az keyvault secret download --subscription "$env:AZ_SUB" --vault-name "$env:AZ_VAULT" --name "$env:SSL_CERT" -f out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx

        az keyvault secret download --subscription "$env:AZ_SUB" --vault-name "$env:AZ_VAULT" --name "$env:ESRP_CERT" -f out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx

    - name: Run ESRP Client
      shell: pwsh
      env:
        AZURE_AAD_ID: ${{ secrets.AZURE_AAD_ID }}
      run: |
        python .github/run_esrp_signing.py

    - name: Upload Installer
      uses: actions/upload-artifact@v2
      with:
        name: DebianInstallerSigned
        path: |
          Signed/*.deb