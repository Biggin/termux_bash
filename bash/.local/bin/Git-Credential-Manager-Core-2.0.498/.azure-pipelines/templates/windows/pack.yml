steps:
  - script: dotnet tool install --tool-path .tools nbgv
    displayName: Install Nerdbank.GitVersioning tool

  - script: .tools\nbgv cloud --common-vars
    displayName: Set version variables

  - script: |
      xcopy "out\windows\Installer.Windows\bin\$(configuration)\net472"       "$(Build.StagingDirectory)\publish\"
      xcopy "out\windows\Payload.Windows\bin\$(configuration)\net472\win-x86" "$(Build.StagingDirectory)\publish\payload\"
      mkdir "$(Build.StagingDirectory)\publish\payload.sym\"
      move  "$(Build.StagingDirectory)\publish\payload\*.pdb"                 "$(Build.StagingDirectory)\publish\payload.sym\"
    displayName: Prepare final build artifacts

  - task: ArchiveFiles@2
    displayName: Create payload archive
    inputs:
      rootFolderOrFile: '$(Build.StagingDirectory)\publish\payload\'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)\publish\gcmcore-win-x86-$(GitBuildVersion).zip'
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    displayName: Create symbol archive
    inputs:
      rootFolderOrFile: '$(Build.StagingDirectory)\publish\payload.sym\'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.StagingDirectory)\publish\symbols-win-x86.zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@0
    displayName: Publish unsigned installer artifacts
    condition: and(succeeded(), ne(variables['SignType'], 'real'))
    inputs:
        artifactName: 'Installer.Windows.Unsigned'
        targetPath: '$(Build.StagingDirectory)\publish'

  - task: PublishPipelineArtifact@0
    displayName: Publish signed installer artifacts
    condition: and(succeeded(), eq(variables['SignType'], 'real'))
    inputs:
        artifactName: 'Installer.Windows.Signed'
        targetPath: '$(Build.StagingDirectory)\publish'
