<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sharedControls="clr-namespace:Microsoft.Git.CredentialManager.UI.Controls;assembly=Microsoft.Git.CredentialManager.UI">

    <ResourceDictionary.MergedDictionaries>
        <!-- Pull in colors -->
        <ResourceDictionary Source="pack://application:,,,/GitHub.UI;component/Colors.xaml"/>
        <!-- Pull in controls defined via templates -->
        <ResourceDictionary Source="pack://application:,,,/GitHub.UI;component/Octicons/OcticonImage.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/GitHub.UI;component/Octicons/OcticonButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/GitHub.UI;component/Controls/GitHubActionLink.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DialogContainerDockPanel" TargetType="DockPanel">
        <Setter Property="LastChildFill" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
    </Style>

    <Style x:Key="DialogContainerStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
    </Style>

    <Style x:Uid="Style_1" x:Key="GitHubButton" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_1" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_2" Property="Background" Value="{DynamicResource ButtonBrush}"/>
        <Setter x:Uid="Setter_3" Property="Foreground" Value="{DynamicResource ButtonTextBrush}"/>
        <Setter x:Uid="Setter_4" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter x:Uid="Setter_5" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_6" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_7" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_8" Property="Padding" Value="10,1,10,1"/>
        <Setter x:Uid="Setter_9" Property="MinWidth" Value="75"/>
        <Setter x:Uid="Setter_10" Property="MinHeight" Value="23"/>
        <Setter x:Uid="Setter_11" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type Button}">
                    <Border x:Uid="ContentContainer" x:Name="ContentContainer"
                        SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                        x:Uid="ContentPresenter_1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_3" Property="IsDefaulted" Value="true">
                <Setter x:Uid="Setter_18" Property="Background" Value="{DynamicResource ButtonDefaultBrush}"/>
                <Setter x:Uid="Setter_19" Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}"/>
                <Setter x:Uid="Setter_20" Property="BorderBrush" Value="{DynamicResource ButtonBorderDefaultBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_1" Property="IsKeyboardFocused" Value="true">
                <Setter x:Uid="Setter_12" Property="Background" Value="{DynamicResource ButtonFocusedBrush}"/>
                <Setter x:Uid="Setter_13" Property="Foreground" Value="{DynamicResource ButtonFocusedTextBrush}"/>
                <Setter x:Uid="Setter_14" Property="BorderBrush" Value="{DynamicResource ButtonBorderFocusedBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_2" Property="IsMouseOver" Value="true">
                <Setter x:Uid="Setter_15" Property="Background" Value="{DynamicResource ButtonHoverBrush}"/>
                <Setter x:Uid="Setter_16" Property="Foreground" Value="{DynamicResource ButtonHoverTextBrush}"/>
                <Setter x:Uid="Setter_17" Property="BorderBrush" Value="{DynamicResource ButtonBorderHoverBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_4" Property="IsPressed" Value="true">
                <Setter x:Uid="Setter_21" Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                <Setter x:Uid="Setter_22" Property="Foreground" Value="{DynamicResource ButtonPressedTextBrush}"/>
                <Setter x:Uid="Setter_23" Property="BorderBrush" Value="{DynamicResource ButtonBorderPressedBrush}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_5" Property="IsEnabled" Value="false">
                <Setter x:Uid="Setter_24" Property="Background" Value="{DynamicResource ButtonDisabledBrush}"/>
                <Setter x:Uid="Setter_25" Property="Foreground" Value="{DynamicResource ButtonDisabledTextBrush}"/>
                <Setter x:Uid="Setter_26" Property="BorderBrush" Value="{DynamicResource ButtonBorderDisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Uid="Style_3" TargetType="Hyperlink">
        <Setter x:Uid="Setter_3" Property="Foreground" Value="{DynamicResource HyperlinkBrush}"/>
        <Setter x:Uid="Setter_4" Property="TextDecorations" Value="None"/>
        <Setter x:Uid="Setter_50" Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyleKey}" />
        <Style.Triggers>
            <Trigger x:Uid="Trigger_1" Property="IsMouseOver" Value="True">
                <Setter x:Uid="Setter_5" Property="Foreground" Value="{DynamicResource HyperlinkHoverBrush}" />
                <Setter x:Uid="Setter_6" Property="TextDecorations" Value="underline" />
            </Trigger>
            <Trigger x:Uid="Trigger_2" Property="IsEnabled" Value="False">
                <Setter x:Uid="Setter_7" Property="Foreground" Value="{DynamicResource HyperlinkDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GitHubVsPromptTextBox" TargetType="{x:Type sharedControls:PromptTextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxTextBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sharedControls:PromptTextBox}">
                    <Grid>
                        <Border x:Name="Bd"
                                CornerRadius="0"
                                ClipToBounds="True"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <Border CornerRadius="0" BorderBrush="Black" BorderThickness="0,1,0,0" Margin="0,-2,0,0" Opacity="0.4">
                                <Border.Effect>
                                    <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="4" Opacity="1" />
                                </Border.Effect>
                            </Border>
                        </Border>

                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Top" Margin="0"/>
                            <Label x:Name="PromptLabel" HorizontalAlignment="Left"
                                 Foreground="{DynamicResource GrayTextBrush}"
                                 FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" Opacity="0"
                                 Target="{Binding ElementName=Bd}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False" IsHitTestVisible="False"
                                 VerticalAlignment="Top">
                                <TextBlock Text="{TemplateBinding PromptText}" Margin="2,0,0,0" TextTrimming="CharacterEllipsis" />
                            </Label>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource GitHubVsBrandedUIBorder}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource TextBoxBorderFocusedBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Text.Length, RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter Property="Opacity" TargetName="PromptLabel" Value="0.7" />
                            <Setter Property="Foreground" Value="Transparent" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" >
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxTextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundFocusedBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBoxTextFocusedBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderFocusedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundDisabledBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBoxTextDisabledBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderDisabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type sharedControls:PromptTextBox}" BasedOn="{StaticResource GitHubVsPromptTextBox}" />
    <Style TargetType="{x:Type sharedControls:SecurePasswordBox}" BasedOn="{StaticResource GitHubVsPromptTextBox}" />
    <Style TargetType="{x:Type TextBlock}" x:Key="GitHubDescriptionTextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="GitHubH1TextBlock">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>
    <Style TargetType="{x:Type Label}" />
</ResourceDictionary>
